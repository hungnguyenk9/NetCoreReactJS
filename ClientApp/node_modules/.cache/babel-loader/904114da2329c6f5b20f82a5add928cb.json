{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\gitNetCoreReactJS\\\\NetCoreReactJS\\\\ClientApp\\\\src\\\\Component\\\\ListVote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Form } from 'react-bootstrap';\nimport './css.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderList() {\n  let lst = this.state.listVote;\n  const users = [];\n\n  for (let index = 0; index < lst.length; index++) {\n    users.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"num is \", index]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this));\n  }\n\n  return users;\n}\n\nexport default function ListVote(props) {\n  _s();\n\n  // let changeMode = props.action;\n  const [listVote, setlistVote] = useState([]);\n  const [pageNum, setPageNume] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n  useEffect(() => {});\n\n  async function getData(date, pageNum, pageSize) {\n    let pageN = pageNum;\n    let pageS = pageSize;\n    setlistVote(result.data);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    let response = await fetch(\"https://localhost:44311/api/Vote/GetByDate/\" + date + \"/\" + pageNum + \"/\" + pageSize, requestOptions);\n    let data = await response.json();\n\n    if (data.statusCode === 1) {\n      return JSON.stringify(data.data);\n    } else {\n      return [];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"warp-content\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listVote.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListVote, \"jNd9IrHnszOzcGQjox+mESPQ4Hw=\");\n\n_c = ListVote;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListVote\");","map":{"version":3,"sources":["D:/study/gitNetCoreReactJS/NetCoreReactJS/ClientApp/src/Component/ListVote.js"],"names":["React","useState","useEffect","Card","Button","Form","renderList","lst","state","listVote","users","index","length","push","ListVote","props","setlistVote","pageNum","setPageNume","pageSize","setPageSize","getData","date","pageN","pageS","result","data","requestOptions","method","headers","response","fetch","json","statusCode","JSON","stringify","map","item","url","title","objectID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,OAAO,WAAP;;;AACA,SAASC,UAAT,GAAsB;AACpB,MAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,QAArB;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,GAAG,CAACK,MAAhC,EAAwCD,KAAK,EAA7C,EAAiD;AAC/CD,IAAAA,KAAK,CAACG,IAAN,eAAW;AAAA,4BAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,SAAOD,KAAP;AACD;;AACD,eAAe,SAASI,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC;AACA,QAAM,CAACN,QAAD,EAAWO,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,WAAV,IAAyBjB,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAIA,iBAAemB,OAAf,CAAuBC,IAAvB,EAA6BL,OAA7B,EAAsCE,QAAtC,EAAgD;AAC9C,QAAII,KAAK,GAAGN,OAAZ;AACA,QAAIO,KAAK,GAAGL,QAAZ;AAEAH,IAAAA,WAAW,CAACS,MAAM,CAACC,IAAR,CAAX;AAGA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFY,KAAvB;AAIA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgDT,IAAhD,GAAuD,GAAvD,GAA6DL,OAA7D,GAAuE,GAAvE,GAA6EE,QAA9E,EAAwFQ,cAAxF,CAA1B;AACA,QAAID,IAAI,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAAjB;;AACA,QAAIN,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACzB,aAAOC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACA,IAApB,CAAP;AACD,KAFD,MAGK;AACH,aAAO,EAAP;AACD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAA,gBACGjB,QAAQ,CAAC2B,GAAT,CAAaC,IAAI,iBAChB;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEA,IAAI,CAACC,GAAd;AAAA,oBAAoBD,IAAI,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,IAAI,CAACG,QAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA1CuB1B,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport './css.css';\r\nfunction renderList() {\r\n  let lst = this.state.listVote;\r\n  const users = []\r\n  for (let index = 0; index < lst.length; index++) {\r\n    users.push(<h2>num is {index}</h2>);\r\n  }\r\n  return users;\r\n}\r\nexport default function ListVote(props) {\r\n  // let changeMode = props.action;\r\n  const [listVote, setlistVote] = useState([]);\r\n  const [pageNum, setPageNume] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n\r\n  useEffect(() => {\r\n\r\n  });\r\n\r\n  async function getData(date, pageNum, pageSize) {\r\n    let pageN = pageNum;\r\n    let pageS = pageSize;\r\n\r\n    setlistVote(result.data);\r\n\r\n\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    let response = await fetch(\"https://localhost:44311/api/Vote/GetByDate/\" + date + \"/\" + pageNum + \"/\" + pageSize, requestOptions);\r\n    let data = await response.json();\r\n    if (data.statusCode === 1) {\r\n      return JSON.stringify(data.data);\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"warp-content\">\r\n      <ul>\r\n        {listVote.map(item => (\r\n          <li key={item.objectID}>\r\n            <a href={item.url}>{item.title}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}